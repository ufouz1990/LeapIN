<Window x:Class="LeapIN.Interface.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:ex="clr-namespace:LeapIN.Extras"
        Title="MainWindow">
    <Window.Style>
        <Binding Mode="OneWay" Source="{StaticResource BlankWindowStyle}"/>
    </Window.Style>

    <Grid>

        <!-- List box for the modes along the bottom -->
        
        <ListBox ItemsSource="{Binding Mouse.MouseModes}" SelectedItem="{Binding Mouse.SelectedMode}" Height="40" VerticalAlignment="Bottom"
                 HorizontalAlignment="Center" Style="{StaticResource HorizontalListBoxStyle}" 
                 ItemContainerStyle="{StaticResource MenuItemStyle}">

            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Grid Width="85">
                        <TextBlock Margin="10,0" Text="{Binding Name}" VerticalAlignment="Center" HorizontalAlignment="Center" />
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseEnter">
                                <ex:SetPropertyAction PropertyName="MouseOverControl"
                                                      TargetObject="{Binding DataContext.Mouse, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}}"
                                                      PropertyValue="True" />
                            </i:EventTrigger>
                            <i:EventTrigger EventName="MouseLeave">
                                <ex:SetPropertyAction PropertyName="MouseOverControl"
                                                      TargetObject="{Binding DataContext.Mouse, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}}"
                                                      PropertyValue="False"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Grid>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
        
        <!-- End -->
        
        <!-- Mouse that lights up on click events -->

        <Border x:Name="mouse" SnapsToDevicePixels="True" HorizontalAlignment="Left" VerticalAlignment="Bottom" 
                Margin="15" Height="95" Width="60" CornerRadius="20" BorderBrush="Black" BorderThickness="1">
            <Border.Style>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="Background" Value="#FCCC"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Mouse.Touching}" Value="True">
                            <Setter Property="Background" Value="{StaticResource OLMouseTouching}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Mouse.Touching}" Value="False">
                            <Setter Property="Background" Value="{StaticResource OLMouseNotTouching}"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
        </Border>
        
        <Border SnapsToDevicePixels="True" HorizontalAlignment="Left" VerticalAlignment="Bottom"
                Margin="15,60" Height="50" Width="30" CornerRadius="20,0,0,0" BorderBrush="Black" BorderThickness="1" />
        <Border SnapsToDevicePixels="True" HorizontalAlignment="Left" VerticalAlignment="Bottom"
                Margin="45,0,0,60" Height="50" Width="30" CornerRadius="0,20,0,0" BorderBrush="Black" BorderThickness="1" />
        <Border SnapsToDevicePixels="True" HorizontalAlignment="Left" VerticalAlignment="Bottom"
                Margin="37,65" Height="30" Width="15" CornerRadius="5" BorderBrush="Black" BorderThickness="1" Background="{Binding Background, ElementName=mouse}"/>

        <!-- End -->
        
        <!-- Keyboard control -->
        
        <ItemsControl ItemsSource="{Binding Keyboard.SKeys}" Style="{StaticResource KeyboardStyle}">
            
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Style="{x:Null}" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Grid Height="50" SnapsToDevicePixels="True">
                        <!-- Inner list for each item or line of keys -->
                        <ListView ItemsSource="{Binding KeyGroup}" Style="{StaticResource HorizontalListStyle}">
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <Grid Height="50" Width="50">
                                        <Button Content="{Binding Name}" 
                                                Command="{Binding DataContext.Keyboard.InputCommand, RelativeSource={RelativeSource FindAncestor, AncestorLevel=2, AncestorType={x:Type ItemsControl}}}" 
                                                CommandParameter="{Binding }" Style="{StaticResource KeyButtonStyle}" />
                                    </Grid>
                                </DataTemplate>
                            </ListView.ItemTemplate>

                            <ListView.ItemContainerStyle>
                                <Style TargetType="{x:Type ListViewItem}">
                                    <Setter Property="Padding" Value="0"/>
                                </Style>
                            </ListView.ItemContainerStyle>
                        </ListView>
                        <!-- End -->
                        
                        <!-- Triggers to monitor when the cursor is over controls -->
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseEnter">
                                <ex:SetPropertyAction PropertyName="MouseOverControl"
                                                      TargetObject="{Binding DataContext.Mouse, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}"
                                                      PropertyValue="True" />
                            </i:EventTrigger>
                            <i:EventTrigger EventName="MouseLeave">
                                <ex:SetPropertyAction PropertyName="MouseOverControl"
                                                      TargetObject="{Binding DataContext.Mouse, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}"
                                                      PropertyValue="False"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <!-- End -->
                    </Grid>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
        
        <!-- End -->

        <!-- Extra Keys -->
        <Button Content="Shift" Command="{Binding Keyboard.ShiftCommand}" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,55" Width="100" Height="60" Style="{StaticResource KeyButtonStyle}"/>
        <Button Content="Enter" Command="{Binding Keyboard.PostCommand}" CommandParameter="{Binding Content, RelativeSource={RelativeSource Self}}" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,5" Width="150" Height="60" Style="{StaticResource KeyButtonStyle}"/>
        <Button Content="Backspace" Command="{Binding Keyboard.PostCommand}" CommandParameter="{Binding Content, RelativeSource={RelativeSource Self}}" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0, 70" Width="150" Height="60" Style="{StaticResource KeyButtonStyle}"/>
        <Button Content="Space" Command="{Binding Keyboard.PostCommand}" CommandParameter="{Binding Content, RelativeSource={RelativeSource Self}}" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="155, 5" Width="250" Height="60" Style="{StaticResource KeyButtonStyle}"/>

    </Grid>
</Window>
