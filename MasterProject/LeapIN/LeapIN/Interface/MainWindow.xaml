<Window x:Class="LeapIN.Interface.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:ex="clr-namespace:LeapIN.Extras"
        Title="MainWindow">
    <Window.Style>
        <Binding Mode="OneWay" Source="{StaticResource BlankWindowStyle}"/>
    </Window.Style>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="90"/>
            <ColumnDefinition Width="2*"/>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>

        <!-- List box for the modes along the bottom -->

        <ListBox Grid.Column="1" Grid.ColumnSpan="2"
                 ItemsSource="{Binding Mouse.MouseModes}" SelectedItem="{Binding Mouse.SelectedMode}" VerticalAlignment="Bottom"
                 Style="{StaticResource HorizontalListBoxStyle}" 
                 ItemContainerStyle="{StaticResource MenuItemStyle}">


            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Grid MaxHeight="50" Height="{Binding ActualHeight, ElementName=button, Mode=OneWay}" Width="{Binding ActualWidth, ElementName=button, Mode=OneWay}">
                        <Viewbox Margin="5,10">
                            <TextBlock Text="{Binding Name}" />
                        </Viewbox>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseEnter">
                                <ex:SetPropertyAction PropertyName="MouseOverControl"
                                                      TargetObject="{Binding DataContext.Mouse, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}}"
                                                      PropertyValue="True" />
                            </i:EventTrigger>
                            <i:EventTrigger EventName="MouseLeave">
                                <ex:SetPropertyAction PropertyName="MouseOverControl"
                                                      TargetObject="{Binding DataContext.Mouse, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}}"
                                                      PropertyValue="False"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Grid>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>

        <!-- End -->

        <!-- Mouse that lights up on click events -->
        <Border x:Name="mouse" SnapsToDevicePixels="True" HorizontalAlignment="Left" VerticalAlignment="Bottom" 
                Margin="15" Height="95" Width="60" CornerRadius="20" BorderBrush="Black" BorderThickness="1">
            <Border.Style>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="Background" Value="#FCCC"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Mouse.Touching}" Value="True">
                            <Setter Property="Background" Value="{StaticResource OLMouseTouching}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Mouse.Touching}" Value="False">
                            <Setter Property="Background" Value="{StaticResource OLMouseNotTouching}"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
        </Border>

        <Border SnapsToDevicePixels="True" HorizontalAlignment="Left" VerticalAlignment="Bottom"
                Margin="15,0,0,60" Height="50" Width="30" CornerRadius="20,0,0,0" BorderBrush="Black" BorderThickness="1" />
        <Border SnapsToDevicePixels="True" HorizontalAlignment="Left" VerticalAlignment="Bottom"
                Margin="45,0,0,60" Height="50" Width="30" CornerRadius="0,20,0,0" BorderBrush="Black" BorderThickness="1" />
        <Border SnapsToDevicePixels="True" HorizontalAlignment="Left" VerticalAlignment="Bottom"
                Margin="37,0,0,65" Height="30" Width="15" CornerRadius="5" BorderBrush="Black" BorderThickness="1" Background="{Binding Background, ElementName=mouse}"/>

        <!-- End -->

        <!-- Keyboard control -->

        <ItemsControl Grid.Column="3" ItemsSource="{Binding Keyboard.SKeys}" Style="{StaticResource KeyboardStyle}">

            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Style="{x:Null}" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>

            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Grid Height="50" SnapsToDevicePixels="True">
                        <!-- Inner list for each item or line of keys -->
                        <ListView ItemsSource="{Binding KeyGroup}" Style="{StaticResource HorizontalListStyle}">
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <Grid Height="50" Width="50">
                                        <Button Content="{Binding Name}" 
                                                Command="{Binding DataContext.Keyboard.InputCommand, RelativeSource={RelativeSource FindAncestor, AncestorLevel=2, AncestorType={x:Type ItemsControl}}}" 
                                                CommandParameter="{Binding }" Style="{StaticResource KeyButtonStyle}" />
                                    </Grid>
                                </DataTemplate>
                            </ListView.ItemTemplate>

                            <ListView.ItemContainerStyle>
                                <Style TargetType="{x:Type ListViewItem}">
                                    <Setter Property="Padding" Value="0"/>
                                </Style>
                            </ListView.ItemContainerStyle>
                        </ListView>
                        <!-- End -->

                        <!-- Triggers to monitor when the cursor is over controls -->
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseEnter">
                                <ex:SetPropertyAction PropertyName="MouseOverControl"
                                                      TargetObject="{Binding DataContext.Mouse, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}"
                                                      PropertyValue="True" />
                            </i:EventTrigger>
                            <i:EventTrigger EventName="MouseLeave">
                                <ex:SetPropertyAction PropertyName="MouseOverControl"
                                                      TargetObject="{Binding DataContext.Mouse, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}"
                                                      PropertyValue="False"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <!-- End -->
                    </Grid>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>

        <!-- End -->

        <!-- Extra Keys -->
        <Grid Grid.Column="3" SnapsToDevicePixels="True" VerticalAlignment="Bottom">
            <Grid.Resources>
                <Style BasedOn="{StaticResource KeyButtonStyle}" TargetType="{x:Type Button}">
                    <Setter Property="MaxHeight" Value="50"/>
                </Style>
                <Style TargetType="{x:Type TextBlock}">
                    <Setter Property="TextAlignment" Value="Center" />
                </Style>
            </Grid.Resources>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Button Grid.Column="0" Command="{Binding Keyboard.ActionCommand}" CommandParameter="{Binding Text, ElementName=SPtext}" >
                <Viewbox Margin="5,10">
                    <TextBlock x:Name="SPtext" Text="Space" Width="{Binding ElementName=BStext, Path=ActualWidth}"/>
                </Viewbox>
            </Button>
            <Button Grid.Column="1" Command="{Binding Keyboard.ActionCommand}" CommandParameter="{Binding Text, ElementName=ENtext}" >
                <Viewbox Margin="5,10">
                    <TextBlock x:Name="ENtext" Text="Enter" Width="{Binding ElementName=BStext, Path=ActualWidth}"/>
                </Viewbox>
            </Button>
            <Button Grid.Column="2" Command="{Binding Keyboard.ActionCommand}" CommandParameter="{Binding Text, ElementName=SHtext}" >
                <Viewbox Margin="5,10">
                    <TextBlock x:Name="SHtext" Text="Shift" Width="{Binding ElementName=BStext, Path=ActualWidth}"/>
                </Viewbox>
            </Button>
            <Button x:Name="button" Grid.Column="3" Command="{Binding Keyboard.ActionCommand}" CommandParameter="{Binding Text, ElementName=BStext}" >
                <Viewbox Margin="5,10">
                    <TextBlock x:Name="BStext" Text="Backspace"/>
                </Viewbox>
            </Button>
        </Grid>

    </Grid>
</Window>
